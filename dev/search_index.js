var documenterSearchIndex = {"docs":
[{"location":"representations/reprs/#Group-representations","page":"Representations","title":"Group representations","text":"","category":"section"},{"location":"representations/reprs/","page":"Representations","title":"Representations","text":"AbstractGroupRepresentation","category":"page"},{"location":"representations/reprs/#DecomposingRepresentations.AbstractGroupRepresentation","page":"Representations","title":"DecomposingRepresentations.AbstractGroupRepresentation","text":"AbstractGroupRepresentation{T<:GroupType, S<:AbstractVectorSpace}\n\nAn abstract type representing a group representation. The type T represents a GroupType, and S represents an AbstractVectorSpace.\n\n\n\n\n\n","category":"type"},{"location":"representations/reprs/#GroupRepresentation","page":"Representations","title":"GroupRepresentation","text":"","category":"section"},{"location":"representations/reprs/#IrreducibleRepresentation","page":"Representations","title":"IrreducibleRepresentation","text":"","category":"section"},{"location":"representations/reprs/#IsotypicComponent","page":"Representations","title":"IsotypicComponent","text":"","category":"section"},{"location":"representations/reprs/#Methods","page":"Representations","title":"Methods","text":"","category":"section"},{"location":"representations/reprs/","page":"Representations","title":"Representations","text":"action(::AbstractGroupRepresentation)\ngroup(ρ::AbstractGroupRepresentation)\nspace(::AbstractGroupRepresentation)\ndim(ρ::AbstractGroupRepresentation)\nirreducibles(::AbstractGroupRepresentation)\nisotypic_components(::AbstractGroupRepresentation)","category":"page"},{"location":"representations/reprs/#DecomposingRepresentations.action-Tuple{AbstractGroupRepresentation}","page":"Representations","title":"DecomposingRepresentations.action","text":"action(::AbstractGroupRepresentation) -> AbstractGroupAction\n\nReturns the group action associated with the given group representation.\n\n\n\n\n\n","category":"method"},{"location":"representations/reprs/#DecomposingRepresentations.group-Tuple{AbstractGroupRepresentation}","page":"Representations","title":"DecomposingRepresentations.group","text":"group(ρ::AbstractGroupRepresentation) -> AbstractGroup\n\nReturns the group associated with the given group representation.\n\n\n\n\n\n","category":"method"},{"location":"representations/reprs/#DecomposingRepresentations.space-Tuple{AbstractGroupRepresentation}","page":"Representations","title":"DecomposingRepresentations.space","text":"space(::AbstractGroupRepresentation) -> AbstractVectorSpace\n\nReturns the vector space on which the given group representation acts.\n\n\n\n\n\n","category":"method"},{"location":"representations/reprs/#DecomposingRepresentations.dim-Tuple{AbstractGroupRepresentation}","page":"Representations","title":"DecomposingRepresentations.dim","text":"dim(ρ::AbstractGroupRepresentation) -> Int\n\nReturns the dimension of the vector space on which the given group representation acts.\n\n\n\n\n\n","category":"method"},{"location":"representations/reprs/#DecomposingRepresentations.irreducibles-Tuple{AbstractGroupRepresentation}","page":"Representations","title":"DecomposingRepresentations.irreducibles","text":"irreducibles(::AbstractGroupRepresentation) -> Any\n\nReturns the irreducible components of the given group representation.\n\n\n\n\n\n","category":"method"},{"location":"representations/reprs/#DecomposingRepresentations.isotypic_components-Tuple{AbstractGroupRepresentation}","page":"Representations","title":"DecomposingRepresentations.isotypic_components","text":"isotypic_components(::AbstractGroupRepresentation) -> Any\n\nReturns the isotypic components of the given group representation.\n\n\n\n\n\n","category":"method"},{"location":"groups/types/#Types-of-groups","page":"Types of groups","title":"Types of groups","text":"","category":"section"},{"location":"groups/types/","page":"Types of groups","title":"Types of groups","text":"GroupType\nFinite\nLie\nMixed\nAbstractGroup","category":"page"},{"location":"groups/types/#DecomposingRepresentations.GroupType","page":"Types of groups","title":"DecomposingRepresentations.GroupType","text":"abstract type GroupType end\n\nAbstract type representing a group type in the context of decomposing representations. The concrete types are Finite, Lie and Mixed.\n\n\n\n\n\n","category":"type"},{"location":"groups/types/#DecomposingRepresentations.Finite","page":"Types of groups","title":"DecomposingRepresentations.Finite","text":"struct Finite <: GroupType end\n\nRepresents a finite group type. This type is used to categorize groups that have a finite number of elements.\n\n\n\n\n\n","category":"type"},{"location":"groups/types/#DecomposingRepresentations.Lie","page":"Types of groups","title":"DecomposingRepresentations.Lie","text":"struct Lie <: GroupType end\n\nRepresents a Lie group type.\n\n\n\n\n\n","category":"type"},{"location":"groups/types/#DecomposingRepresentations.Mixed","page":"Types of groups","title":"DecomposingRepresentations.Mixed","text":"struct Mixed <: GroupType end\n\nRepresents a mixed group type. This type is used in direct products of finite groups with Lie groups.\n\n\n\n\n\n","category":"type"},{"location":"groups/types/#DecomposingRepresentations.AbstractGroup","page":"Types of groups","title":"DecomposingRepresentations.AbstractGroup","text":"AbstractGroup{T<:GroupType, F}\n\nAn abstract type representing a reductive group. The type T represents a GroupType, while F represents the number field (or number type) over which the group is defined.\n\n\n\n\n\n","category":"type"},{"location":"groups/finite/#Finite-groups","page":"Finite groups","title":"Finite groups","text":"","category":"section"},{"location":"groups/finite/","page":"Finite groups","title":"Finite groups","text":"TBW","category":"page"},{"location":"groups/products/#Direct-product-of-groups","page":"Direct products","title":"Direct product of groups","text":"","category":"section"},{"location":"groups/products/","page":"Direct products","title":"Direct products","text":"AbstractDirectProductGroup\nDirectProductGroup","category":"page"},{"location":"groups/products/#DecomposingRepresentations.AbstractDirectProductGroup","page":"Direct products","title":"DecomposingRepresentations.AbstractDirectProductGroup","text":"AbstractDirectProductGroup{T<:GroupType, F} <: AbstractGroup{T, F}\n\nAn abstract type representing a direct product group.\n\n\n\n\n\n","category":"type"},{"location":"groups/products/#DecomposingRepresentations.DirectProductGroup","page":"Direct products","title":"DecomposingRepresentations.DirectProductGroup","text":"DirectProductGroup{T<:GroupType, F} <: AbstractDirectProductGroup{T, F}\n\nRepresents a direct product of groups.\n\nExamples\n\njulia> SO3 = LieGroup(\"SO\", 3);\n\njulia> T = ScalingLieGroup{ComplexF64}([1 2 3 4; -1 -2 -3 -4]);\n\njulia> SO3 × SO3 × T\nDirectProductLieGroup SO(3) × SO(3) × (ℂˣ)²\n number type (or field): ComplexF64\n 3 factors: SO(3), SO(3), (ℂˣ)²\n Lie algebra:\n  SumLieAlgebra 𝖘𝖔(3) ⊕ 𝖘𝖔(3) ⊕ ℂ²\n  dimension: 8\n  rank (dimension of Cartan subalgebra): 4\n\n\n\n\n\n","category":"type"},{"location":"representations/spaces/#Vector-spaces","page":"Vector spaces","title":"Vector spaces","text":"","category":"section"},{"location":"representations/spaces/","page":"Vector spaces","title":"Vector spaces","text":"AbstractVectorSpace\nbasis(::AbstractVectorSpace)\ndim(::AbstractVectorSpace)","category":"page"},{"location":"representations/spaces/#DecomposingRepresentations.AbstractVectorSpace","page":"Vector spaces","title":"DecomposingRepresentations.AbstractVectorSpace","text":"AbstractVectorSpace{F}\n\nAn abstract type representing a vector space. The type F represents the number field (or number type) over which the vector space is defined.\n\n\n\n\n\n","category":"type"},{"location":"representations/spaces/#DecomposingRepresentations.basis-Tuple{AbstractVectorSpace}","page":"Vector spaces","title":"DecomposingRepresentations.basis","text":"basis(::AbstractVectorSpace)\n\nReturns a basis of the given vector space.\n\n\n\n\n\n","category":"method"},{"location":"representations/spaces/#DecomposingRepresentations.dim-Tuple{AbstractVectorSpace}","page":"Vector spaces","title":"DecomposingRepresentations.dim","text":"dim(::AbstractVectorSpace) -> Int\n\nReturns the dimension of the given vector space.\n\n\n\n\n\n","category":"method"},{"location":"representations/spaces/#VectorSpace","page":"Vector spaces","title":"VectorSpace","text":"","category":"section"},{"location":"representations/spaces/#Direct-sum","page":"Vector spaces","title":"Direct sum","text":"","category":"section"},{"location":"representations/spaces/","page":"Vector spaces","title":"Vector spaces","text":"AbstractDirectSum\nsummands(::AbstractDirectSum)\nnsummands(::AbstractDirectSum)","category":"page"},{"location":"representations/spaces/#DecomposingRepresentations.AbstractDirectSum","page":"Vector spaces","title":"DecomposingRepresentations.AbstractDirectSum","text":"AbstractDirectSum{F} <: AbstractVectorSpace{F}\n\nAn abstract type representing a direct sum of vector spaces over the field (or number type) F.\n\n\n\n\n\n","category":"type"},{"location":"representations/spaces/#DecomposingRepresentations.summands-Tuple{AbstractDirectSum}","page":"Vector spaces","title":"DecomposingRepresentations.summands","text":"summands(::AbstractDirectSum)\n\nReturns the summands of the given direct sum of vector spaces.\n\n\n\n\n\n","category":"method"},{"location":"representations/spaces/#DecomposingRepresentations.nsummands-Tuple{AbstractDirectSum}","page":"Vector spaces","title":"DecomposingRepresentations.nsummands","text":"nsummands(::AbstractDirectSum) -> Int\n\nReturns the number of summands in the given direct sum of vector spaces.\n\n\n\n\n\n","category":"method"},{"location":"representations/spaces/#Symmetric-power","page":"Vector spaces","title":"Symmetric power","text":"","category":"section"},{"location":"representations/spaces/","page":"Vector spaces","title":"Vector spaces","text":"AbstractSymmetricPower\nbase_space\npower","category":"page"},{"location":"representations/spaces/#DecomposingRepresentations.AbstractSymmetricPower","page":"Vector spaces","title":"DecomposingRepresentations.AbstractSymmetricPower","text":"AbstractSymmetricPower{F} <: AbstractVectorSpace{F}\n\nAn abstract type representing a symmetric power of a vector space over the field (or number type) F.\n\n\n\n\n\n","category":"type"},{"location":"representations/spaces/#DecomposingRepresentations.base_space","page":"Vector spaces","title":"DecomposingRepresentations.base_space","text":"base_space(::AbstractSymmetricPower) -> AbstractVectorSpace\n\nReturns the base vector space of the given symmetric power. I.e. for mathrmSym^n(V), this function returns V.\n\n\n\n\n\n","category":"function"},{"location":"representations/spaces/#DecomposingRepresentations.power","page":"Vector spaces","title":"DecomposingRepresentations.power","text":"power(::AbstractSymmetricPower) -> Int\n\nReturns the power of the given symmetric power.\n\n\n\n\n\n","category":"function"},{"location":"representations/spaces/#Tensor-product","page":"Vector spaces","title":"Tensor product","text":"","category":"section"},{"location":"representations/spaces/","page":"Vector spaces","title":"Vector spaces","text":"AbstractTensorProduct\nspaces","category":"page"},{"location":"representations/spaces/#DecomposingRepresentations.AbstractTensorProduct","page":"Vector spaces","title":"DecomposingRepresentations.AbstractTensorProduct","text":"AbstractTensorProduct{F} <: AbstractVectorSpace{F}\n\nAn abstract type representing a tensor product of vector spaces over the field F.\n\n\n\n\n\n","category":"type"},{"location":"representations/spaces/#DecomposingRepresentations.spaces","page":"Vector spaces","title":"DecomposingRepresentations.spaces","text":"spaces(::AbstractTensorProduct) -> Tuple{AbstractVectorSpace}\n\nReturns the tuple of vector spaces that form the given tensor product.\n\n\n\n\n\n","category":"function"},{"location":"representations/spaces/#HighestWeightModule","page":"Vector spaces","title":"HighestWeightModule","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"CurrentModule = DecomposingRepresentations","category":"page"},{"location":"#Introduction","page":"Introduction","title":"Introduction","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"DecomposingRepresentations.jl is a Julia package that provides an API for decomposing representations of reductive groups acting on multivariate polynomials using DynamicPolynomials.jl.","category":"page"},{"location":"#Quick-start","page":"Introduction","title":"Quick start","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"using DecomposingRepresentations\n\n@polyvar x y z\nvars = [x, y, z]\n\nSO3 = LieGroup(\"SO\", 3)\na = MatrixGroupAction(SO3, [vars])\n\nV = FixedDegreePolynomials(vars, 2)\nρ = GroupRepresentation(a, V)\n\nirrs = IrreducibleDecomposition(ρ)\n[highest_weight(irr) for irr in irreducibles(irrs)]\n[vector(hw_vector(irr)) for irr in irreducibles(irrs)]\n\niso = IsotypicDecomposition(ρ)\nbasis(iso[Weight([0])]) # invariant\nH₂ = basis(iso[Weight([2])]) # spherical harmonics\nrref(H₂)","category":"page"},{"location":"groups/lie/#Lie-groups","page":"Lie groups","title":"Lie groups","text":"","category":"section"},{"location":"groups/lie/","page":"Lie groups","title":"Lie groups","text":"The computations with Lie groups are done by passing to their associated Lie algebras. We distinguish between Lie groups that act by scalings (represented by ScalingLieGroup) and basic reductive matrix Lie groups, like mathrmSO(n) (represented by LieGroup).","category":"page"},{"location":"groups/lie/#Lie-groups-2","page":"Lie groups","title":"Lie groups","text":"","category":"section"},{"location":"groups/lie/","page":"Lie groups","title":"Lie groups","text":"ScalingLieGroup\nLieGroup","category":"page"},{"location":"groups/lie/#DecomposingRepresentations.ScalingLieGroup","page":"Lie groups","title":"DecomposingRepresentations.ScalingLieGroup","text":"ScalingLieGroup{F} <: AbstractGroup{Lie, F}\n\nRepresents a scaling Lie group. The group elements are diagonal matrices.\n\nConstructors\n\nScalingLieGroup{F}(size::Int) where F\nScalingLieGroup{F}(exps::Matrix{Int}) where F\n\nExamples\n\njulia> ScalingLieGroup{ComplexF64}(5)\nScalingLieGroup ℂˣ\n number type (or field): ComplexF64\n Lie algebra properties:\n  dimension: 1\n  basis (diagonal matrices):\n   [1, 1, 1, 1, 1]\n\njulia> exps = [1 1 1 0 0 0; 0 0 0 1 -2 0];\n\njulia> ScalingLieGroup{ComplexF64}(exps)\nScalingLieGroup (ℂˣ)²\n number type (or field): ComplexF64\n Lie algebra properties:\n  dimension: 2\n  basis (diagonal matrices):\n   [1, 1, 1, 0, 0, 0]\n   [0, 0, 0, 1, -2, 0]\n\n\n\n\n\n","category":"type"},{"location":"groups/lie/#DecomposingRepresentations.LieGroup","page":"Lie groups","title":"DecomposingRepresentations.LieGroup","text":"LieGroup{F} <: AbstractGroup{Lie, F}\n\nDescribes a matrix Lie group.\n\nConstructors\n\nLieGroup(type::String, size::Int)\n\nSupported Lie group types: SO (special orthogonal).\n\nExamples\n\njulia> SO3 = LieGroup(\"SO\", 3)\nLieGroup SO(3)\n number type (or field): ComplexF64\n weight type: Int64\n Lie algebra properties:\n  dimension: 3\n  rank (dimension of Cartan subalgebra): 1\n\n\n\n\n\n","category":"type"},{"location":"groups/lie/#Lie-algebras","page":"Lie groups","title":"Lie algebras","text":"","category":"section"},{"location":"groups/lie/","page":"Lie groups","title":"Lie groups","text":"AbstractLieAlgebra\nalgebra(::AbstractGroup{Lie})\nname(::AbstractLieAlgebra)\nbasis(::AbstractLieAlgebra)\nchevalley_basis(::AbstractLieAlgebra)\ndim(::AbstractLieAlgebra)\nrank(::AbstractLieAlgebra)","category":"page"},{"location":"groups/lie/#DecomposingRepresentations.AbstractLieAlgebra","page":"Lie groups","title":"DecomposingRepresentations.AbstractLieAlgebra","text":"AbstractLieAlgebra{F}\n\nAn abstract type representing a Lie algebra. The type F represents the number field (or number type) over which the Lie algebra is defined.\n\n\n\n\n\n","category":"type"},{"location":"groups/lie/#DecomposingRepresentations.algebra-Tuple{AbstractGroup{Lie}}","page":"Lie groups","title":"DecomposingRepresentations.algebra","text":"algebra(::AbstractGroup{Lie, F}) -> AbstractLieAlgebra{F}\n\nReturns the Lie algebra of a given Lie group.\n\nExamples\n\njulia> SO3 = LieGroup(\"SO\", 3);\n\njulia> algebra(SO3)\nLieAlgebra 𝖘𝖔(3)\n number type (or field): ComplexF64\n weight type: Int64\n dimension: 3\n rank (dimension of Cartan subalgebra): 1\n\n\n\n\n\n","category":"method"},{"location":"groups/lie/#DecomposingRepresentations.name-Tuple{AbstractLieAlgebra}","page":"Lie groups","title":"DecomposingRepresentations.name","text":"name(::AbstractLieAlgebra) -> String\n\nReturns the name of the given Lie algebra.\n\n\n\n\n\n","category":"method"},{"location":"groups/lie/#DecomposingRepresentations.basis-Tuple{AbstractLieAlgebra}","page":"Lie groups","title":"DecomposingRepresentations.basis","text":"basis(::AbstractLieAlgebra)\n\nReturns a basis of the given Lie algebra. For example, the Lie algebra mathfrakso(3 mathbbC), consists of skew-symmetric matrices and hence its (standard) basis is given by the matrices\n\nleft \nbeginbmatrix 0  0  0  0  0  -1  0  1  0 endbmatrix\nbeginbmatrix 0  0  1  0  0  0  -1  0  0 endbmatrix\nbeginbmatrix 0  -1  0  1  0  0  0  0  0 endbmatrix\nright\n\n\n\n\n\n","category":"method"},{"location":"groups/lie/#DecomposingRepresentations.chevalley_basis-Tuple{AbstractLieAlgebra}","page":"Lie groups","title":"DecomposingRepresentations.chevalley_basis","text":"chevalley_basis(::AbstractLieAlgebra)\n\nReturns the Chevalley basis of the given Lie algebra. For example, for the Lie algebra mathfrakso(3 mathbbC) returns \n\nleft \nunderbracebeginbmatrix 0  0  -1  0  0  -i  1  i  0 endbmatrix_J_+\nunderbracebeginbmatrix 0  0  1  0  0  -i  -1  i  0 endbmatrix_J_-\nunderbracebeginbmatrix 0  -i  0  i  0  0  0  0  0 endbmatrix_J_3\nright\n\nwith the commutation relations\n\nbeginaligned\nJ_3 J_+ = J_+ \nJ_3 J_- = -J_- \nJ_+ J_- = 2J_3\nendaligned\n\n\n\n\n\n","category":"method"},{"location":"groups/lie/#DecomposingRepresentations.dim-Tuple{AbstractLieAlgebra}","page":"Lie groups","title":"DecomposingRepresentations.dim","text":"dim(::AbstractLieAlgebra) -> Int\n\nReturns the dimension of the given Lie algebra.\n\n\n\n\n\n","category":"method"},{"location":"groups/lie/#DecomposingRepresentations.rank-Tuple{AbstractLieAlgebra}","page":"Lie groups","title":"DecomposingRepresentations.rank","text":"rank(::AbstractLieAlgebra) -> Int\n\nReturns the rank (i.e. the dimension of the Cartan subalgebra) of the given Lie algebra.\n\n\n\n\n\n","category":"method"},{"location":"representations/actions/#Group-actions","page":"Actions","title":"Group actions","text":"","category":"section"},{"location":"representations/actions/","page":"Actions","title":"Actions","text":"AbstractGroupAction\ngroup(::AbstractGroupAction)\nalgebra(::AbstractGroupAction{Lie})","category":"page"},{"location":"representations/actions/#DecomposingRepresentations.AbstractGroupAction","page":"Actions","title":"DecomposingRepresentations.AbstractGroupAction","text":"AbstractGroupAction{T<:GroupType, F}\n\nAn abstract type representing a group action. It is used to define how a group acts on a given vector space.\n\n\n\n\n\n","category":"type"},{"location":"representations/actions/#DecomposingRepresentations.group-Tuple{AbstractGroupAction}","page":"Actions","title":"DecomposingRepresentations.group","text":"group(::AbstractGroupAction) -> AbstractGroup\n\nReturns the group associated with a given AbstractGroupAction.\n\n\n\n\n\n","category":"method"},{"location":"representations/actions/#DecomposingRepresentations.algebra-Tuple{AbstractGroupAction{Lie}}","page":"Actions","title":"DecomposingRepresentations.algebra","text":"algebra(a::AbstractGroupAction{Lie}) -> AbstractLieAlgebra\n\nReturns the associated Lie algebra of the Lie group of the action.\n\n\n\n\n\n","category":"method"},{"location":"representations/actions/#MatrixGroupAction","page":"Actions","title":"MatrixGroupAction","text":"","category":"section"},{"location":"representations/actions/#ScalingLieGroupAction","page":"Actions","title":"ScalingLieGroupAction","text":"","category":"section"}]
}
